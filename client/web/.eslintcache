[{"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/App.tsx":"1","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx":"2","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx":"3","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/index.tsx":"4","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/reportWebVitals.ts":"5","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Dashboard.tsx":"6","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Instance.tsx":"7","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.tsx":"8","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Container/InstanceContainer.tsx":"9","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/AppState.tsx":"10","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/model/Template.tsx":"11","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/model/ServerObject.tsx":"12","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/model/Flavor.tsx":"13","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/api/server/ServerRepository.tsx":"14","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Container/InstanceListContainer.tsx":"15","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/App.tsx":"16","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx":"17","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/api/server/ServerRepository.tsx":"18","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/ServerObject.tsx":"19","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Components/Instance.tsx":"20","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Components/Dashboard.tsx":"21","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Login/Login.tsx":"22","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Container/InstanceListContainer.tsx":"23","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/AppState.tsx":"24","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.tsx":"25","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/Flavor.tsx":"26","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/index.tsx":"27","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/Quota.tsx":"28","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx":"29","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/reportWebVitals.ts":"30","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/api/user/UserRepository.tsx":"31","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/UserInfo.tsx":"32","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Container/InstanceContainer.tsx":"33","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/Template.tsx":"34","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Login/Components/LoginForm.tsx":"35"},{"size":662,"mtime":1611846803175,"results":"36","hashOfConfig":"37"},{"size":4169,"mtime":1610980258610,"results":"38","hashOfConfig":"37"},{"size":4363,"mtime":1610978780295,"results":"39","hashOfConfig":"37"},{"size":743,"mtime":1609487438913,"results":"40","hashOfConfig":"37"},{"size":425,"mtime":1610639864380,"results":"41","hashOfConfig":"37"},{"size":1192,"mtime":1610868443971,"results":"42","hashOfConfig":"37"},{"size":3389,"mtime":1610975497463,"results":"43","hashOfConfig":"37"},{"size":1491,"mtime":1610977779463,"results":"44","hashOfConfig":"37"},{"size":378,"mtime":1610873496031,"results":"45","hashOfConfig":"37"},{"size":1261,"mtime":1610980204834,"results":"46","hashOfConfig":"37"},{"size":343,"mtime":1610640425735,"results":"47","hashOfConfig":"37"},{"size":2231,"mtime":1611846803178,"results":"48","hashOfConfig":"37"},{"size":171,"mtime":1610640425732,"results":"49","hashOfConfig":"37"},{"size":5304,"mtime":1610888494878,"results":"50","hashOfConfig":"37"},{"size":475,"mtime":1610878819765,"results":"51","hashOfConfig":"37"},{"size":1134,"mtime":1614860510710,"results":"52","hashOfConfig":"53"},{"size":4896,"mtime":1614865986176,"results":"54","hashOfConfig":"53"},{"size":6538,"mtime":1614870916194,"results":"55","hashOfConfig":"53"},{"size":2535,"mtime":1614865076724,"results":"56","hashOfConfig":"53"},{"size":5621,"mtime":1614936037958,"results":"57","hashOfConfig":"53"},{"size":2113,"mtime":1614865562694,"results":"58","hashOfConfig":"53"},{"size":501,"mtime":1614612828040,"results":"59","hashOfConfig":"53"},{"size":474,"mtime":1611846803182,"results":"60","hashOfConfig":"53"},{"size":1640,"mtime":1614440048216,"results":"61","hashOfConfig":"53"},{"size":1417,"mtime":1614862848850,"results":"62","hashOfConfig":"53"},{"size":171,"mtime":1611846803177,"results":"63","hashOfConfig":"53"},{"size":754,"mtime":1611846803177,"results":"64","hashOfConfig":"53"},{"size":258,"mtime":1611846803178,"results":"65","hashOfConfig":"53"},{"size":5614,"mtime":1614936251175,"results":"66","hashOfConfig":"53"},{"size":425,"mtime":1611846803183,"results":"67","hashOfConfig":"53"},{"size":3889,"mtime":1614862323727,"results":"68","hashOfConfig":"53"},{"size":230,"mtime":1611846803179,"results":"69","hashOfConfig":"53"},{"size":379,"mtime":1611846803182,"results":"70","hashOfConfig":"53"},{"size":343,"mtime":1611846803178,"results":"71","hashOfConfig":"53"},{"size":3588,"mtime":1614865153856,"results":"72","hashOfConfig":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wdxlzr",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"24n4li",{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"107"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"107"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"107"},"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/App.tsx",["154"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx",["155","156"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx",["157","158"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/index.tsx",["159","160","161","162","163","164","165"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Redirect, Route, Router, Switch } from 'react-router';\nimport Login from './pages/Login/Login';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport { createBrowserHistory } from \"history\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/reportWebVitals.ts",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Dashboard.tsx",["166"],"\n\nimport React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport '../../../index.css';\nimport './Dashboard.less';\nimport ChangePassword from '../../ChangePassword/ChangePassword';\nimport { Layout, Button, Row, Col} from 'antd';\nimport CSS from 'csstype';\nimport { InstanceListContainer } from '../Container/InstanceListContainer';\n\nconst { Header, Footer, } = Layout;\nconst mypageStyle: CSS.Properties ={\n    margin: '0 auto',\n    float: 'right',\n    marginRight: '5px'\n}\n\nconst Dashboard = () => {\n    return (\n        <>\n            <Layout className=\"layout\">\n                <Header>\n                <div className=\"logo\" />\n                  <Row style={mypageStyle}>\n                    <Col span={12}>\n                      <ChangePassword></ChangePassword>\n                    </Col>\n                    <Col span={12}>\n                      <Button danger >로그아웃</Button>\n                    </Col>\n                  </Row>\n                </Header>\n                <InstanceListContainer/>\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n            </Layout>\n        </>\n    );\n}\n\nexport default Dashboard;","/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/Instance.tsx",["167","168"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Container/InstanceContainer.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/AppState.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/model/Template.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/model/ServerObject.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/model/Flavor.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/api/server/ServerRepository.tsx",["169","170"],"/Users/jang-wonpyo/workplace/sidejobs/Jupynetes/client/web/src/pages/Dashboard/Container/InstanceListContainer.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/App.tsx",[],["171","172"],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/ChangePassword/ChangePassword.tsx",["173","174","175","176","177"],"import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../../index.css';\nimport { Button, Modal, Form, Input } from 'antd';\nimport CSS from 'csstype';\nimport Password from 'antd/lib/input/Password';\nimport { UserRepository } from '../../api/user/UserRepository';\n\nconst changePasswordButtonStyle: CSS.Properties = {\n  backgroundColor: 'rgba(255, 255, 255, 1)',\n  border: 'solid',\n  borderColor: 'rgba(78, 185, 242,1)',\n};\n\nconst layout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 6,\n    span: 12,\n  },\n};\n\nconst onFinishFailed = () => {};\n\nconst ChangePassword = (props: any) => {\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [modalText, setModalText] = React.useState('Content of the modal');\n  const [username, setUsername] = React.useState('');\n  const [currentPassword, setCurrentPassword] = React.useState('');\n  const [newPassword, setNewPassword] = React.useState('');\n  const [newPasswordConfirm, setNewPasswordConfirm] = React.useState('');\n\n  const changeUsernameHandler = (event: any) => {\n    console.log('event.target.value : ' + event.target.value);\n    setUsername(event.target.value);\n    console.log('username: ' + username);\n  };\n\n  const changeCurrentPasswordHandler = (event: any) => {\n    console.log('event.target.value : ' + event.target.value);\n    setCurrentPassword(event.target.value);\n    console.log('currentPassword: ' + currentPassword);\n  };\n\n  const changeNewPasswordHandler = (event: any) => {\n    console.log('event.target.value : ' + event.target.value);\n    setNewPassword(event.target.value);\n    console.log('newPassword: ' + newPassword);\n  };\n\n  const changeNewPasswordConfirmHandler = (event: any) => {\n    console.log('event.target.value : ' + event.target.value);\n    setNewPasswordConfirm(event.target.value);\n    console.log('newPasswordConfirm: ' + newPasswordConfirm);\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    console.log('newPasswrd: ' + newPassword);\n    console.log('newPasswordConfirm: ' + newPasswordConfirm);\n    if (newPassword !== newPasswordConfirm) {\n      alert('새 패스워드와 새 패스워드 확인이 일치하지 않습니다.');\n      return;\n    }\n\n    let userRepository = new UserRepository();\n\n    let result = userRepository.postUser(currentPassword, newPassword);\n\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n    return result;\n  };\n\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  console.log('change password username : ' + props.username);\n\n  return (\n    <div>\n      <Button style={changePasswordButtonStyle} onClick={showModal}>\n        비밀번호수정\n      </Button>\n      <Modal\n        title=\"비밀번호 수정\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember: true,\n          }}\n        >\n          <Form.Item\n            label=\"아이디\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n            <Input\n              disabled={true}\n              onChange={changeUsernameHandler}\n              defaultValue={props.username}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"기존 비밀번호\"\n            name=\"passwordOriginal\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password onChange={changeCurrentPasswordHandler} />\n          </Form.Item>\n          <Form.Item\n            label=\"변경할 비밀번호\"\n            name=\"passwordNew\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password onChange={changeNewPasswordHandler} />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호 재입력\"\n            name=\"passwordRetype\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password onChange={changeNewPasswordConfirmHandler} />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/api/server/ServerRepository.tsx",["178","179","180","181","182","183"],"import { plainToClass } from 'class-transformer';\nimport { ServerResponse } from 'http';\nimport { client } from '../../App';\nimport { ServerObject } from '../../model/ServerObject';\n\nconst isTest = false;\nconst axios = require('axios').default;\n\nexport class ServerRepository {\n  provider: ServerProvider;\n\n  constructor() {\n    this.provider = new ServerProvider();\n  }\n\n  async getServers() {\n    let result = await this.provider.getServers();\n    if (result === undefined) {\n      return;\n    } else {\n      let servers = plainToClass(ServerObject, result.data as any[]);\n      return servers;\n    }\n  }\n\n  async postServer(serverObject: any) {\n    let result = await this.provider.postServer(serverObject);\n    if (result === undefined) {\n      alert('인스턴스 생성에 실패했습니다.');\n      return;\n    } else {\n      let server = plainToClass(ServerObject, result.data);\n      return server;\n    }\n  }\n\n  //   async getServer() {\n  //     let result: any = await this.provider.getServer();\n\n  //     return null;\n  //   }\n\n  async deleteServer(serverObject: ServerObject) {\n    let result: boolean = await this.provider.deleteServer(serverObject);\n    return result;\n  }\n}\n\nclass ServerProvider {\n  constructor() {}\n\n  async getServers() {\n    axios.defaults.withCredentials = true;\n    var response;\n    try {\n      response = await client.get('/server', {\n        withCredentials: true,\n        headers: { crossDomain: true, 'Content-Type': 'application/json' },\n      });\n    } catch (_) {\n      alert(_);\n      return;\n    }\n    return response;\n  }\n\n  async postServer(serverObject: any) {\n    axios.defaults.withCredentials = true;\n    var response;\n\n    try {\n      response = await client.post('/server', serverObject, {\n        withCredentials: true,\n        headers: { crossDomain: true, 'Content-Type': 'application/json' },\n      });\n    } catch (_) {}\n    if (response === undefined) {\n    } else {\n      alert(response.data);\n    }\n\n    return response;\n  }\n\n  async deleteServer(serverObject: ServerObject) {\n    axios.defaults.withCredentials = true;\n    var response;\n\n    try {\n      response = await client.delete(`/server/${serverObject.id}`, {\n        withCredentials: true,\n        headers: { crossDomain: true, 'Content-Type': 'application/json' },\n      });\n    } catch (_) {\n      alert('삭제에 실패했습니다.');\n      return false;\n    }\n    return true;\n  }\n}\n\nclass ServerFakeProvider {\n  constructor() {}\n\n  getServers(): any {\n    let data = `[\n            {\n                \"id\": \"1\",\n                \"name\": \"사과서버\",\n                \"description\": \"사과서버입니다.\",\n                \"template\": {\n                \"id\": 0,\n                \"name\": \"사과템플릿\",\n                \"description\": \"사과템플릿입니다.\",\n                \"bdoy\": \"string\",\n                \"variables\": [\n                    {\n                    \"name\": \"string\",\n                    \"value\": \"string\"\n                    }\n                ]\n                },\n                \"flavor\": {\n                \"cpu\": 55,\n                \"memory\": 22,\n                \"nvidia_gpu\": 44\n                },\n                \"created_at\": \"2021-01-02T08:30:00Z\",\n                \"status\": \"running\",\n                \"message\": \"string\",\n                \"last_transition_time\": \"2021-01-02T08:30:00Z\",\n                \"last_probe_time\": \"2021-01-02T08:30:00Z\",\n                \"owner\": [\n                \"2016920036\",\n                \"admin\"\n                ]\n            },\n            {\n                \"id\": \"2\",\n                \"name\": \"오렌지서버\",\n                \"description\": \"사과서버입니다.\",\n                \"template\": {\n                \"id\": 0,\n                \"name\": \"사과템플릿\",\n                \"description\": \"사과템플릿입니다.\",\n                \"bdoy\": \"string\",\n                \"variables\": [\n                    {\n                    \"name\": \"string\",\n                    \"value\": \"string\"\n                    }\n                ]\n                },\n                \"flavor\": {\n                \"cpu\": 55,\n                \"memory\": 22,\n                \"nvidia_gpu\": 44\n                },\n                \"created_at\": \"2021-01-11T08:30:00Z\",\n                \"status\": \"error\",\n                \"message\": \"string\",\n                \"last_transition_time\": \"2021-01-11T08:30:00Z\",\n                \"last_probe_time\": \"2021-01-11T08:30:00Z\",\n                \"owner\": [\n                \"2016920036\",\n                \"admin\"\n                ]\n            }\n        ]`;\n\n    let json = JSON.parse(data);\n    let servers = plainToClass(ServerObject, json);\n    return servers;\n  }\n\n  postServer(): string {\n    return `{\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"template\": {\n                \"id\": 0,\n                \"name\": \"string\",\n                \"description\": \"string\",\n                \"bdoy\": \"string\",\n                \"variables\": [\n                {\n                    \"name\": \"string\",\n                    \"value\": \"string\"\n                }\n                ]\n            },\n            \"flavor\": {\n                \"cpu\": 0,\n                \"memory\": 0,\n                \"nvidia_gpu\": 0\n            },\n            \"created_at\": \"2021-01-30T08:30:00Z\",\n            \"status\": \"running\",\n            \"message\": \"string\",\n            \"last_transition_time\": \"2021-01-30T08:30:00Z\",\n            \"last_probe_time\": \"2021-01-30T08:30:00Z\",\n            \"owner\": [\n                \"2016920036\",\n                \"admin\"\n            ]\n            }`;\n  }\n\n  getServer(): string {\n    return `{\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"template\": {\n                \"id\": 0,\n                \"name\": \"string\",\n                \"description\": \"string\",\n                \"bdoy\": \"string\",\n                \"variables\": [\n                {\n                    \"name\": \"string\",\n                    \"value\": \"string\"\n                }\n                ]\n            },\n            \"flavor\": {\n                \"cpu\": 0,\n                \"memory\": 0,\n                \"nvidia_gpu\": 0\n            },\n            \"created_at\": \"2021-01-30T08:30:00Z\",\n            \"status\": \"running\",\n            \"message\": \"string\",\n            \"last_transition_time\": \"2021-01-30T08:30:00Z\",\n            \"last_probe_time\": \"2021-01-30T08:30:00Z\",\n            \"owner\": [\n                \"2016920036\",\n                \"admin\"\n            ]\n        }`;\n  }\n}\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/ServerObject.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Components/Instance.tsx",["184","185","186","187","188","189"],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Components/Dashboard.tsx",["190"],"import React, { useCallback, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport '../../../index.css';\nimport './Dashboard.less';\nimport ChangePassword from '../../ChangePassword/ChangePassword';\nimport { Layout, Button } from 'antd';\nimport CSS from 'csstype';\nimport { InstanceListContainer } from '../Container/InstanceListContainer';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { UserRepository } from '../../../api/user/UserRepository';\n\nconst { Footer } = Layout;\nconst mypageStyle: CSS.Properties = {\n  margin: 'auto',\n  marginRight: '5px',\n  width: '100%',\n  display: 'grid',\n  gridTemplateColumns: '1fr 15fr 1fr 1fr',\n  backgroundColor: 'rgba(149, 206, 237, 1)',\n  height: '50px',\n};\n\nconst logoutButtonStyle: CSS.Properties = {\n  backgroundColor: 'rgba(255, 255, 255, 1)',\n  border: 'solid',\n  borderColor: 'rgba(78, 185, 242,1)',\n};\n\nconst buttonArea: CSS.Properties = {\n  fontSize: '14px',\n  fontWeight: 'bold',\n  marginTop: 'auto',\n  marginBottom: 'auto',\n};\n\nconst Dashboard = (props: any) => {\n  const history = useHistory();\n  const location: any = useLocation();\n  const handleOnClickLogout = useCallback(async () => {\n    let userRepository = new UserRepository();\n    let result = await userRepository.getLogout();\n    if (result === true) {\n      history.push('/login');\n    }\n  }, [history]);\n\n  console.log('wow');\n\n  console.log(location.state.userId);\n\n  return (\n    <>\n      <Layout>\n        <div style={mypageStyle}>\n          <div style={buttonArea}>{location.state.userId}</div>\n          <div style={buttonArea}></div>\n          <div style={buttonArea}>\n            <ChangePassword username={location.state.userId}></ChangePassword>\n          </div>\n          <div style={buttonArea}>\n            <Button style={logoutButtonStyle} onClick={handleOnClickLogout}>\n              로그아웃\n            </Button>\n          </div>\n        </div>\n        <InstanceListContainer />\n        <Footer style={{ textAlign: 'center' }}>\n          Ant Design ©2018 Created by Ant UED\n        </Footer>\n      </Layout>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Login/Login.tsx",["191","192","193"],"import 'antd/dist/antd.css';\nimport '../../index.css';\nimport './Login.css';\n\nimport { Typography, Layout, Space } from 'antd';\nimport LoginForm from './Components/LoginForm';\n\nconst { Title } = Typography;\n\nconst Login = () => {\n  const children = [\n    // <Title className=\"Title\">\n    //   <h1 className=\"Title\">Jupynetes</h1>\n    // </Title>,\n    <div style={{ height: '3rem' }}></div>,\n    <LoginForm />,\n  ];\n\n  return (\n    <>\n      <div>{children}</div>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Container/InstanceListContainer.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/AppState.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Components/InstanceList.tsx",["194","195"],"import React, { FC } from 'react';\nimport { Card, Row, Col } from 'antd';\nimport CreateInstance from '../../CreateInstance/CreateInstance';\nimport appState from '../../../AppState';\nimport { ServerObject } from '../../../model/ServerObject';\nimport InstanceContainer from '../Container/InstanceContainer';\nimport { useObserver } from 'mobx-react';\nimport CSS from 'csstype';\n\nconst InstanceList: FC<Object> = () => {\n  const myInstacneTitle: CSS.Properties = {\n    fontSize: '30px',\n    fontWeight: 'normal',\n    lineHeight: '45px',\n  };\n\n  return useObserver(() => {\n    return (\n      <>\n        <div id=\"test\">\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        </div>\n        <div id=\"test\">\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        </div>\n        <Row gutter={16}>\n          <Col className=\"gutter-row\" span={6}></Col>\n          <Col className=\"gutter-row\" span={6}></Col>\n          <Col className=\"gutter-row\" span={6}></Col>\n          <Col className=\"gutter-row\" span={6}>\n            <CreateInstance></CreateInstance>\n          </Col>\n        </Row>\n        <p style={myInstacneTitle}>내 인스턴스 목록</p>\n        <div className=\"ant-row\">\n          {appState.servers.map(function (item: any) {\n            return <InstanceContainer serverData={item}></InstanceContainer>;\n          })}\n        </div>\n      </>\n    );\n  });\n};\n\nexport default InstanceList;\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/Flavor.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/index.tsx",["196","197","198","199","200","201","202"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Redirect, Route, Router, Switch } from 'react-router';\nimport Login from './pages/Login/Login';\nimport Dashboard from './pages/Dashboard/Components/Dashboard';\nimport { createBrowserHistory } from \"history\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/Quota.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/CreateInstance/CreateInstance.tsx",["203","204"],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/reportWebVitals.ts",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/api/user/UserRepository.tsx",["205","206","207"],"import { plainToClass } from 'class-transformer';\nimport { assert } from 'console';\nimport { client } from '../../App';\nimport { UserInfo } from '../../model/UserInfo';\nconst axios = require('axios').default;\n\nexport class UserRepository {\n  provider: UserFakeProvider;\n\n  constructor() {\n    this.provider = new UserFakeProvider();\n  }\n\n  async getAdminUser() {\n    let result: string = await this.provider.getAdminUser();\n    let json = JSON.parse(result);\n    let users = plainToClass(UserInfo, json);\n    return users;\n  }\n\n  async getUser() {\n    axios.defaults.withCredentials = true;\n    var response;\n    try {\n      response = await client.get('/user', {\n        withCredentials: true,\n        headers: { crossDomain: true, 'Content-Type': 'application/json' },\n      });\n    } catch (_) {\n      return;\n    }\n\n    let userInfo = plainToClass(UserInfo, response.data);\n    return userInfo;\n  }\n\n  async postUser(password: string, newPassword: string) {\n    axios.defaults.withCredentials = true;\n    var response;\n    console.log('id ; ' + password);\n    console.log('password ; ' + newPassword);\n    try {\n      response = await client.post(\n        '/user',\n        {\n          password: password,\n          new_password: newPassword,\n        },\n        {\n          withCredentials: true,\n          headers: { crossDomain: true, 'Content-Type': 'application/json' },\n        },\n      );\n    } catch (_) {\n      return;\n    }\n\n    return response;\n  }\n\n  async postLogin(id: string, password: string) {\n    axios.defaults.withCredentials = true;\n    var response;\n    console.log('id ; ' + id);\n    console.log('password ; ' + password);\n    try {\n      response = await client.post(\n        '/login',\n        {\n          id: id,\n          pw: password,\n        },\n        {\n          withCredentials: true,\n          headers: { crossDomain: true, 'Content-Type': 'application/json' },\n        },\n      );\n    } catch (_) {\n      alert('가입하지 않은 아이디이거나, 잘못된 비밀번호입니다.');\n      return;\n    }\n\n    return response;\n  }\n\n  async getLogout() {\n    axios.defaults.withCredentials = true;\n    var response;\n    try {\n      response = await client.get('/logout', {\n        withCredentials: true,\n        headers: { crossDomain: true, 'Content-Type': 'application/json' },\n      });\n    } catch (_) {\n      alert('로그아웃에 실패했습니다.');\n      return;\n    }\n\n    return true;\n  }\n}\n\nclass UserFakeProvider {\n  constructor() {}\n\n  getAdminUser(): string {\n    return `[\n                    {\n                        \"id\": \"string\",\n                        \"user_quota\": {\n                            \"instance\": 1,\n                            \"cpu\": 2,\n                            \"memmory\": 3,\n                            \"nvidia_gpu\": 4,\n                            \"storage\": 5\n                        },\n                        \"group_quota\": {\n                            \"instance\": 6,\n                            \"cpu\": 7,\n                            \"memmory\": 8,\n                            \"nvidia_gpu\": 9,\n                            \"storage\": 10\n                        }\n                    }\n                ]`;\n  }\n\n  getUser(): string {\n    return `[\n                    {\n                        \"id\": \"string\",\n                        \"user_quota\": {\n                            \"instance\": 1,\n                            \"cpu\": 2,\n                            \"memmory\": 3,\n                            \"nvidia_gpu\": 4,\n                            \"storage\": 5\n                        },\n                        \"group_quota\": {\n                            \"instance\": 6,\n                            \"cpu\": 7,\n                            \"memmory\": 8,\n                            \"nvidia_gpu\": 9,\n                            \"storage\": 10\n                        }\n                    }\n                ]`;\n  }\n}\n","/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/UserInfo.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Dashboard/Container/InstanceContainer.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/model/Template.tsx",[],"/Users/jang-wonpyo/workplace/sidejobs/jupynetes/client/web/src/pages/Login/Components/LoginForm.tsx",["208"],"import { useState } from 'react';\nimport { Typography, Form, Input, Button, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nimport { UserRepository } from '../../../api/user/UserRepository';\n\nconst styles = require('./LoginForm.css');\n\nconst { Title } = Typography;\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\n\nconst LoginForm = (props: any) => {\n  const history = useHistory();\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n\n  const changeUserIdHandler = (event: any) => {\n    console.log('event.target.value : ' + event.target.value);\n    setUserId(event.target.value);\n    console.log('userId: ' + userId);\n  };\n\n  const changePasswordHandler = (event: any) => {\n    console.log('event.target.value : ' + event.target.value);\n    setPassword(event.target.value);\n    console.log('password: ' + password);\n  };\n\n  const onFinish = async (values: any) => {\n    console.log('Success:', values);\n\n    let repository = new UserRepository();\n    console.log('userId: ' + userId);\n    console.log('password: ' + password);\n    let response = await repository.postLogin(userId, password);\n    if (response === undefined) {\n    } else {\n      let userInfo = await repository.getUser();\n      if (userInfo !== undefined) {\n      } else {\n        alert('로그인에 실패했습니다.');\n        return;\n      }\n      console.log('hey');\n      console.log(userInfo);\n      history.push({\n        pathname: '/dashboard',\n        state: { userId: userId },\n      });\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <>\n      <Space align=\"center\">\n        <div></div>\n        <div className=\"loginForm\">\n          <Space align=\"start\">\n            <Title className=\"title\">JUPYNETES</Title>\n          </Space>\n          <div></div>\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              className=\"userNameForm\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: '아이디를 입력해 주세요!',\n                },\n              ]}\n            >\n              <Input\n                className=\"userNameInput\"\n                autoFocus\n                type=\"text\"\n                placeholder=\"아이디\"\n                onChange={changeUserIdHandler}\n              />\n            </Form.Item>\n            <Space align=\"start\">\n              <Form.Item\n                className=\"passwordForm\"\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: '패스워드를 입력해 주세요!',\n                  },\n                ]}\n              >\n                <Input.Password\n                  type=\"text\"\n                  placeholder=\"패스워드\"\n                  onChange={changePasswordHandler}\n                  className=\"passwordInput\"\n                />\n              </Form.Item>\n            </Space>\n            <div></div>\n            <Form.Item className=\"submitButtonArea\">\n              <Button type=\"primary\" htmlType=\"submit\" className=\"submitButton\">\n                로그인\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Space>\n    </>\n  );\n};\n\nexport default LoginForm;\n",{"ruleId":"209","severity":1,"message":"210","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"213","line":3,"column":17,"nodeType":"211","messageId":"212","endLine":3,"endColumn":26},{"ruleId":"209","severity":1,"message":"214","line":40,"column":12,"nodeType":"211","messageId":"212","endLine":40,"endColumn":21},{"ruleId":"209","severity":1,"message":"215","line":23,"column":7,"nodeType":"211","messageId":"212","endLine":23,"endColumn":17},{"ruleId":"209","severity":1,"message":"214","line":72,"column":12,"nodeType":"211","messageId":"212","endLine":72,"endColumn":21},{"ruleId":"209","severity":1,"message":"216","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":18},{"ruleId":"209","severity":1,"message":"217","line":6,"column":20,"nodeType":"211","messageId":"212","endLine":6,"endColumn":25},{"ruleId":"209","severity":1,"message":"218","line":6,"column":27,"nodeType":"211","messageId":"212","endLine":6,"endColumn":33},{"ruleId":"209","severity":1,"message":"219","line":6,"column":35,"nodeType":"211","messageId":"212","endLine":6,"endColumn":41},{"ruleId":"209","severity":1,"message":"220","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":13},{"ruleId":"209","severity":1,"message":"221","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":17},{"ruleId":"209","severity":1,"message":"222","line":11,"column":7,"nodeType":"211","messageId":"212","endLine":11,"endColumn":11},{"ruleId":"209","severity":1,"message":"213","line":3,"column":17,"nodeType":"211","messageId":"212","endLine":3,"endColumn":26},{"ruleId":"209","severity":1,"message":"223","line":25,"column":7,"nodeType":"211","messageId":"212","endLine":25,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":69,"column":38,"nodeType":"226","endLine":69,"endColumn":41},{"ruleId":"209","severity":1,"message":"227","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":45,"column":5,"nodeType":"230","messageId":"231","endLine":45,"endColumn":20},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"209","severity":1,"message":"213","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"236","line":6,"column":8,"nodeType":"211","messageId":"212","endLine":6,"endColumn":16},{"ruleId":"209","severity":1,"message":"215","line":23,"column":7,"nodeType":"211","messageId":"212","endLine":23,"endColumn":17},{"ruleId":"209","severity":1,"message":"237","line":30,"column":7,"nodeType":"211","messageId":"212","endLine":30,"endColumn":21},{"ruleId":"209","severity":1,"message":"214","line":35,"column":10,"nodeType":"211","messageId":"212","endLine":35,"endColumn":19},{"ruleId":"209","severity":1,"message":"227","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":24},{"ruleId":"209","severity":1,"message":"238","line":6,"column":7,"nodeType":"211","messageId":"212","endLine":6,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":50,"column":3,"nodeType":"230","messageId":"231","endLine":50,"endColumn":19},{"ruleId":"209","severity":1,"message":"239","line":90,"column":7,"nodeType":"211","messageId":"212","endLine":90,"endColumn":15},{"ruleId":"209","severity":1,"message":"240","line":102,"column":7,"nodeType":"211","messageId":"212","endLine":102,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":103,"column":3,"nodeType":"230","messageId":"231","endLine":103,"endColumn":19},{"ruleId":"209","severity":1,"message":"241","line":9,"column":8,"nodeType":"211","messageId":"212","endLine":9,"endColumn":12},{"ruleId":"209","severity":1,"message":"242","line":50,"column":7,"nodeType":"211","messageId":"212","endLine":50,"endColumn":27},{"ruleId":"209","severity":1,"message":"223","line":52,"column":7,"nodeType":"211","messageId":"212","endLine":52,"endColumn":33},{"ruleId":"209","severity":1,"message":"243","line":65,"column":9,"nodeType":"211","messageId":"212","endLine":65,"endColumn":16},{"ruleId":"209","severity":1,"message":"244","line":110,"column":11,"nodeType":"211","messageId":"212","endLine":110,"endColumn":16},{"ruleId":"209","severity":1,"message":"245","line":114,"column":11,"nodeType":"211","messageId":"212","endLine":114,"endColumn":15},{"ruleId":"209","severity":1,"message":"246","line":1,"column":30,"nodeType":"211","messageId":"212","endLine":1,"endColumn":39},{"ruleId":"209","severity":1,"message":"247","line":5,"column":22,"nodeType":"211","messageId":"212","endLine":5,"endColumn":28},{"ruleId":"209","severity":1,"message":"248","line":5,"column":30,"nodeType":"211","messageId":"212","endLine":5,"endColumn":35},{"ruleId":"209","severity":1,"message":"249","line":8,"column":9,"nodeType":"211","messageId":"212","endLine":8,"endColumn":14},{"ruleId":"209","severity":1,"message":"250","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"251","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":22},{"ruleId":"209","severity":1,"message":"216","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":18},{"ruleId":"209","severity":1,"message":"217","line":6,"column":20,"nodeType":"211","messageId":"212","endLine":6,"endColumn":25},{"ruleId":"209","severity":1,"message":"218","line":6,"column":27,"nodeType":"211","messageId":"212","endLine":6,"endColumn":33},{"ruleId":"209","severity":1,"message":"219","line":6,"column":35,"nodeType":"211","messageId":"212","endLine":6,"endColumn":41},{"ruleId":"209","severity":1,"message":"220","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":13},{"ruleId":"209","severity":1,"message":"221","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":17},{"ruleId":"209","severity":1,"message":"222","line":11,"column":7,"nodeType":"211","messageId":"212","endLine":11,"endColumn":11},{"ruleId":"209","severity":1,"message":"214","line":32,"column":10,"nodeType":"211","messageId":"212","endLine":32,"endColumn":19},{"ruleId":"209","severity":1,"message":"252","line":32,"column":21,"nodeType":"211","messageId":"212","endLine":32,"endColumn":33},{"ruleId":"209","severity":1,"message":"253","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":16},{"ruleId":"209","severity":1,"message":"239","line":90,"column":7,"nodeType":"211","messageId":"212","endLine":90,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":104,"column":3,"nodeType":"230","messageId":"231","endLine":104,"endColumn":19},{"ruleId":"209","severity":1,"message":"254","line":7,"column":7,"nodeType":"211","messageId":"212","endLine":7,"endColumn":13},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'modalText' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Login' is defined but never used.","'Dashboard' is defined but never used.","'hist' is assigned a value but never used.","'statusStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ServerResponse' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["255"],"no-negated-in-lhs",["256"],"'Password' is defined but never used.","'onFinishFailed' is assigned a value but never used.","'isTest' is assigned a value but never used.","'response' is assigned a value but never used.","'ServerFakeProvider' is defined but never used.","'Icon' is defined but never used.","'style' is assigned a value but never used.","'history' is assigned a value but never used.","'index' is assigned a value but never used.","'text' is assigned a value but never used.","'useEffect' is defined but never used.","'Layout' is defined but never used.","'Space' is defined but never used.","'Title' is assigned a value but never used.","'Card' is defined but never used.","'ServerObject' is defined but never used.","'setModalText' is assigned a value but never used.","'assert' is defined but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]